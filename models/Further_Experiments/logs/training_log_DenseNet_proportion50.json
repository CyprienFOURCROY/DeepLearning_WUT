{
    "metadata": {
        "model": "DenseNet(\n  (features): Sequential(\n    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (denseblock1): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(32, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(44, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(56, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(68, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(68, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(80, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(92, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(92, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (transition1): Transition(\n      (bn): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv): Conv2d(104, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n    )\n    (denseblock2): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(52, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(76, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(76, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(88, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(100, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(112, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (6): DenseLayer(\n          (bn1): BatchNorm2d(124, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(124, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (7): DenseLayer(\n          (bn1): BatchNorm2d(136, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(136, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (8): DenseLayer(\n          (bn1): BatchNorm2d(148, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(148, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (9): DenseLayer(\n          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(160, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (10): DenseLayer(\n          (bn1): BatchNorm2d(172, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(172, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (11): DenseLayer(\n          (bn1): BatchNorm2d(184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(184, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (transition2): Transition(\n      (bn): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv): Conv2d(196, 98, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n    )\n    (denseblock3): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(98, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(98, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(110, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(110, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(122, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(122, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(134, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(134, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(146, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(146, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(158, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(158, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (6): DenseLayer(\n          (bn1): BatchNorm2d(170, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(170, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (7): DenseLayer(\n          (bn1): BatchNorm2d(182, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(182, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (norm5): BatchNorm2d(194, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (relu5): ReLU(inplace=True)\n  )\n  (classifier): Linear(in_features=194, out_features=10, bias=True)\n)",
        "freq_bins": 64,
        "time_steps": 64,
        "batch_size": 32,
        "train_set_size": 45000,
        "optimizer": "SGD",
        "loss_function": "CrossEntropyLoss()",
        "num_epochs": 60,
        "proportion": 50
    },
    "data": {
        "1": {
            "batches": {},
            "summary": {
                "train_loss": 0.936467618300886,
                "train_acc": 0.6680222222222222,
                "val_loss": 0.9621446053557926,
                "val_acc": 0.6603111111111111,
                "lr": 0.001
            }
        },
        "2": {
            "batches": {},
            "summary": {
                "train_loss": 0.8941177503174725,
                "train_acc": 0.682,
                "val_loss": 0.9415388093458281,
                "val_acc": 0.6703222222222223,
                "lr": 0.001
            }
        },
        "3": {
            "batches": {},
            "summary": {
                "train_loss": 0.8700165849208154,
                "train_acc": 0.6914,
                "val_loss": 0.9451562769280539,
                "val_acc": 0.6682333333333333,
                "lr": 0.001
            }
        },
        "4": {
            "batches": {},
            "summary": {
                "train_loss": 0.8543395095669639,
                "train_acc": 0.6951111111111111,
                "val_loss": 0.9398928441007932,
                "val_acc": 0.6723333333333333,
                "lr": 0.001
            }
        },
        "5": {
            "batches": {},
            "summary": {
                "train_loss": 0.8366042375564575,
                "train_acc": 0.7009777777777778,
                "val_loss": 0.9285654337882996,
                "val_acc": 0.6758333333333333,
                "lr": 0.001
            }
        },
        "6": {
            "batches": {},
            "summary": {
                "train_loss": 0.815136653464486,
                "train_acc": 0.7083111111111111,
                "val_loss": 0.9553513541301092,
                "val_acc": 0.6686444444444445,
                "lr": 0.001
            }
        },
        "7": {
            "batches": {},
            "summary": {
                "train_loss": 0.799920399983724,
                "train_acc": 0.7152444444444445,
                "val_loss": 0.925051416905721,
                "val_acc": 0.6770666666666667,
                "lr": 0.001
            }
        },
        "8": {
            "batches": {},
            "summary": {
                "train_loss": 0.790013077289565,
                "train_acc": 0.7183111111111111,
                "val_loss": 0.9845395735820135,
                "val_acc": 0.6601777777777778,
                "lr": 0.001
            }
        },
        "9": {
            "batches": {},
            "summary": {
                "train_loss": 0.7695183910286503,
                "train_acc": 0.7278888888888889,
                "val_loss": 0.9374435110039181,
                "val_acc": 0.6751555555555555,
                "lr": 0.001
            }
        },
        "10": {
            "batches": {},
            "summary": {
                "train_loss": 0.7570676365767969,
                "train_acc": 0.7286222222222222,
                "val_loss": 0.9603082679642572,
                "val_acc": 0.6730222222222222,
                "lr": 0.001
            }
        },
        "11": {
            "batches": {},
            "summary": {
                "train_loss": 0.7445807803922625,
                "train_acc": 0.7339333333333333,
                "val_loss": 0.9407111515336567,
                "val_acc": 0.6761888888888888,
                "lr": 0.001
            }
        }
    }
}