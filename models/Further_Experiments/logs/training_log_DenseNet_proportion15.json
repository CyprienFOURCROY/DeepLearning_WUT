{
    "metadata": {
        "model": "DenseNet(\n  (features): Sequential(\n    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU(inplace=True)\n    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (denseblock1): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(32, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(44, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(56, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(68, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(68, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(80, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(92, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(92, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (transition1): Transition(\n      (bn): BatchNorm2d(104, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv): Conv2d(104, 52, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n    )\n    (denseblock2): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(52, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(76, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(76, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(88, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(100, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(112, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(112, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (6): DenseLayer(\n          (bn1): BatchNorm2d(124, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(124, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (7): DenseLayer(\n          (bn1): BatchNorm2d(136, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(136, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (8): DenseLayer(\n          (bn1): BatchNorm2d(148, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(148, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (9): DenseLayer(\n          (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(160, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (10): DenseLayer(\n          (bn1): BatchNorm2d(172, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(172, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (11): DenseLayer(\n          (bn1): BatchNorm2d(184, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(184, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (transition2): Transition(\n      (bn): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (relu): ReLU(inplace=True)\n      (conv): Conv2d(196, 98, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)\n    )\n    (denseblock3): DenseBlock(\n      (layers): ModuleList(\n        (0): DenseLayer(\n          (bn1): BatchNorm2d(98, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(98, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (1): DenseLayer(\n          (bn1): BatchNorm2d(110, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(110, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (2): DenseLayer(\n          (bn1): BatchNorm2d(122, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(122, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (3): DenseLayer(\n          (bn1): BatchNorm2d(134, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(134, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (4): DenseLayer(\n          (bn1): BatchNorm2d(146, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(146, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (5): DenseLayer(\n          (bn1): BatchNorm2d(158, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(158, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (6): DenseLayer(\n          (bn1): BatchNorm2d(170, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(170, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n        (7): DenseLayer(\n          (bn1): BatchNorm2d(182, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu1): ReLU(inplace=True)\n          (conv1): Conv2d(182, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n          (bn2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          (relu2): ReLU(inplace=True)\n          (conv2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        )\n      )\n    )\n    (norm5): BatchNorm2d(194, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (relu5): ReLU(inplace=True)\n  )\n  (classifier): Linear(in_features=194, out_features=10, bias=True)\n)",
        "freq_bins": 64,
        "time_steps": 64,
        "batch_size": 32,
        "train_set_size": 13500,
        "optimizer": "SGD",
        "loss_function": "CrossEntropyLoss()",
        "num_epochs": 60,
        "proportion": 15
    },
    "data": {
        "1": {
            "batches": {},
            "summary": {
                "train_loss": 1.4163522662427188,
                "train_acc": 0.4806666666666667,
                "val_loss": 1.468731783941057,
                "val_acc": 0.4719777777777778,
                "lr": 0.001
            }
        },
        "2": {
            "batches": {},
            "summary": {
                "train_loss": 1.3643192848040595,
                "train_acc": 0.5025185185185185,
                "val_loss": 1.4760668342590333,
                "val_acc": 0.46397777777777777,
                "lr": 0.001
            }
        },
        "3": {
            "batches": {},
            "summary": {
                "train_loss": 1.3437782377710838,
                "train_acc": 0.5106666666666667,
                "val_loss": 1.5595205154895782,
                "val_acc": 0.4555888888888889,
                "lr": 0.001
            }
        },
        "4": {
            "batches": {},
            "summary": {
                "train_loss": 1.3145291423910601,
                "train_acc": 0.5188888888888888,
                "val_loss": 1.3862183871693081,
                "val_acc": 0.5016111111111111,
                "lr": 0.001
            }
        },
        "5": {
            "batches": {},
            "summary": {
                "train_loss": 1.292317209085582,
                "train_acc": 0.5284444444444445,
                "val_loss": 1.4207833867814805,
                "val_acc": 0.48464444444444443,
                "lr": 0.001
            }
        },
        "6": {
            "batches": {},
            "summary": {
                "train_loss": 1.26112891585341,
                "train_acc": 0.5424444444444444,
                "val_loss": 1.351453174601661,
                "val_acc": 0.5073111111111112,
                "lr": 0.001
            }
        },
        "7": {
            "batches": {},
            "summary": {
                "train_loss": 1.2362269503527907,
                "train_acc": 0.5494074074074075,
                "val_loss": 1.3925517110453711,
                "val_acc": 0.5074444444444445,
                "lr": 0.001
            }
        },
        "8": {
            "batches": {},
            "summary": {
                "train_loss": 1.2310455803057594,
                "train_acc": 0.5567407407407408,
                "val_loss": 1.4042464483155144,
                "val_acc": 0.5012,
                "lr": 0.001
            }
        },
        "9": {
            "batches": {},
            "summary": {
                "train_loss": 1.210205408210438,
                "train_acc": 0.5617037037037037,
                "val_loss": 1.346055496486028,
                "val_acc": 0.5114333333333333,
                "lr": 0.001
            }
        },
        "10": {
            "batches": {},
            "summary": {
                "train_loss": 1.1809320198416144,
                "train_acc": 0.573037037037037,
                "val_loss": 1.383648875088162,
                "val_acc": 0.5140888888888889,
                "lr": 0.001
            }
        },
        "11": {
            "batches": {},
            "summary": {
                "train_loss": 1.1557804809362402,
                "train_acc": 0.577037037037037,
                "val_loss": 1.3352576228936512,
                "val_acc": 0.5295333333333333,
                "lr": 0.001
            }
        },
        "12": {
            "batches": {},
            "summary": {
                "train_loss": 1.1459796575573384,
                "train_acc": 0.5852592592592593,
                "val_loss": 1.4114847417354583,
                "val_acc": 0.5003666666666666,
                "lr": 0.001
            }
        },
        "13": {
            "batches": {},
            "summary": {
                "train_loss": 1.1243291597513225,
                "train_acc": 0.5934074074074074,
                "val_loss": 1.3169124307394027,
                "val_acc": 0.5335444444444445,
                "lr": 0.001
            }
        },
        "14": {
            "batches": {},
            "summary": {
                "train_loss": 1.1070647454374773,
                "train_acc": 0.5985185185185186,
                "val_loss": 1.2944774117151896,
                "val_acc": 0.5385222222222222,
                "lr": 0.001
            }
        },
        "15": {
            "batches": {},
            "summary": {
                "train_loss": 1.09060705216575,
                "train_acc": 0.6062962962962963,
                "val_loss": 1.2719707817925348,
                "val_acc": 0.5493666666666667,
                "lr": 0.001
            }
        },
        "16": {
            "batches": {},
            "summary": {
                "train_loss": 1.0857769274881102,
                "train_acc": 0.6065185185185186,
                "val_loss": 1.3439302005026075,
                "val_acc": 0.5252111111111111,
                "lr": 0.001
            }
        },
        "17": {
            "batches": {},
            "summary": {
                "train_loss": 1.0614962692226844,
                "train_acc": 0.6165185185185185,
                "val_loss": 1.3936054260545307,
                "val_acc": 0.5127777777777778,
                "lr": 0.001
            }
        },
        "18": {
            "batches": {},
            "summary": {
                "train_loss": 1.0445924423882182,
                "train_acc": 0.6202962962962963,
                "val_loss": 1.3611983103778627,
                "val_acc": 0.5264555555555556,
                "lr": 0.001
            }
        },
        "19": {
            "batches": {},
            "summary": {
                "train_loss": 1.0270018556389198,
                "train_acc": 0.6282962962962962,
                "val_loss": 1.4102043962796529,
                "val_acc": 0.5118777777777778,
                "lr": 0.001
            }
        }
    }
}